plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
m1=arima(cc2,order=c(1,0,3),seasonal=list(order=c(1,1,0),period=4))
m1
acf(rstandard(m1))
m1=arima(cc2,order=c(0,0,3),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
```
m1=arima(cc,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4))
m1
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
####
m1=arima(cc,order=c(1,0,0),seasonal=list(order=c(0,1,0),period=4))
m1
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
m1=arima(cc,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4))
m1
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc1=diff(cc1,lag=4)
cc2=diff(cc2,lag=4)
plot.ts(cc1)
plot.ts(cc2)
cc1=diff(cc1,lag=4)
acf(cc1)
plot.ts(cc1,type="o")
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
plot.ts(cc1,type="o")
plot.ts(cc2,type="o")
acf(cc1)
pacf(cc1)
cc1=cc[1:95]
cc2=cc[96:196]
plot.ts(cc1,type="o")
acf(cc1)
pacf(cc1)
cc1=diff(cc1,lag=4)
cc2=diff(cc2,lag=4)
acf(cc1)
pacf(cc1)
acf(cc1)
pacf(cc1)
m1=arima(cc1,order=c(5,0,0))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
plot.ts(cc1,type="o")
acf(cc1)
pacf(cc1)
acf(cc1)
cc1=diff(cc1,lag=4)
acf(cc1)
pacf(cc1)
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
m1=arima(cc1,order=c(5,0,0))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
##ar5
m1=arima(cc1,order=c(5,0,0))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
##ar5
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
plot.ts(cc2,type="o")
acf(cc2)
pacf(cc2)
m1=arima(cc2,order=c(0,0,1),seasonal=list(order=c(1,1,0),period=4))
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
m1=arima(cc2,order=c(0,0,3),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
m1=arima(cc2,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4)　)
m1
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
library(TSA)
x=read.table(file="C:\\Users\\TSR\\Desktop\\時間序列\\4444.txt")
cc=x$V3
cc1=cc[1:70]
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc=x$V3
cc1=cc[1:70]
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc1=cc[1:70]
plot.ts(cc1,type="o")
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc1=cc[1:30]
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
0
plot(m1,n.ahead=20,type='b')
cc1=cc[1:70]
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
library(TSA)
x=read.table(file="C:\\Users\\TSR\\Desktop\\時間序列\\4444.txt")
cc=x$V3
cc1=cc[1:70]
cc2=cc[96:196]
##季節性
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc1=cc[1:70]
plot.ts(cc1,type="o")
x=read.table(file="C:\\Users\\TSR\\Desktop\\時間序列\\4444.txt")
cc=x$V3
cc
###原型
plot.ts(cc,type="o")
cc1=cc[1:90]
cc2=cc[96:196]
##季節性
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
cc1=cc[1:88]
cc2=cc[96:196]
##季節性
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
##原模型
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4)　)
m1=arima(cc1,order=c(1,1,0),seasonal=list(order=c(1,0,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
m1=arima(cc1,order=c(1,1,0),seasonal=list(order=c(1,0,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
m1=arima(cc1,order=c(1,1,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
?print
?ks.test
y=rnorm(50,mean=mean(x),sd=sd(x))
num=c(188,197,194,198,185,186,194,200,179,203)
v=c()
v1=c()
v2=c()
for (i in 0:9){
aa=paste("C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\",i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
v1=c(v1,bb)
v2=c(v2,cc)
v=c(v,aa)
}
v
length(v)
input=function(max,goal,){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
input=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=v1
xx[,2]=v2
return(xx)
}
num=c(188,197,194,198,185,186,194,200,179,203)
vvv=input(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
num=c(188,197,194,198,185,186,194,200,179,203)
>
num=c(188,197,194,198,185,186,194,200,179,203)
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=v1
xx[,2]=v2
return(xx)
}
vvv=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
vvv
num=c(188,197,194,198,185,186,194,200,179,203)
xx=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
tt=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\testDigits\\")
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
num=c(188,197,194,198,185,186,194,200,179,203)
xx=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
tt=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\testDigits\\")
h=0
ff=c()
for (i in 1:946){
for (j in 1:1934){
ff[j]=sum((tt[i,3:1026]-xx[j,3:1026])^2)
}
if  (xx[which.min(ff),1]==tt[i,1]) h=h+1
}
h
dim(test)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\testDigits\\")
dim(test)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
dim(train)
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
dim(train)
h/dim(test)[1]
per=count/dim(test)[1]
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
#############製作所有目錄，並記錄檔案編號到index1 ,index2
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
##############xx 為第一行是編號0~9 第二行為第二個編號  第三行到第1026行是將該個資料的data 以數值存入
#########讀入資料
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\testDigits\\")
#################判斷開始
count=0
dist=c()
for (i in 1:dim(test)[1]){
for (j in 1:dim(train)[1]){
dist[j]=sum((test[i,3:1026]-train[j,3:1026])^2)
}
if  (train[which.min(dist),1]==test[i,1]) count=count+1
}
per=count/dim(test)[1]
sprintf("判斷成功率為%s",per)
sprintf("判斷成功率為%s%",per)
sprintf("判斷成功率為%s/%",per)
sprintf("判斷成功率為%s\%",per)
sprintf("判斷成功率為%s",per)
