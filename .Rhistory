#############製作所有目錄，並記錄檔案編號到index1 ,index2
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
for (i in 1:dim(train)[1]){
train[i,3]=sum(train[i,3:dim(train)[2]])
train=as.data.frame(train[,1:3])
}
for (i in 1:dim(test)[1]){
test[i,3]=sum(test[i,3:dim(test)[2]])
test=as.data.frame(test[,1:3])
}
names(train)=c("index1","index2","x")
names(test)=c("index1","index2","x")
datamean=c(mean(train[1:189,3]),mean(train[190:(188+197+2),3]))
datamean
head(train)
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
#############製作所有目錄，並記錄檔案編號到index1 ,index2
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
for (i in 1:dim(train)[1]){
train[i,3]=sum(train[i,3:dim(train)[2]])
train=as.data.frame(train[,1:3])
}
for (i in 1:dim(test)[1]){
test[i,3]=sum(test[i,3:dim(test)[2]])
test=as.data.frame(test[,1:3])
}
head(train)
dim(train)[1]
train=as.data.frame(train[,1:3])
head(train)
names(train)=c("index1","index2","x")
names(test)=c("index1","index2","x")
head(train)
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
for (i in 1:dim(train)[1]){
train[i,3]=sum(train[i,3:(dim(train)[2])])
train=as.data.frame(train[,1:3])
}
head(train)
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
head(train)
for (i in 1:dim(train)[1]){
train[i,3]=sum(train[i,3:(dim(train)[2])])
}
train=as.data.frame(train[,1:3])
for (i in 1:dim(test)[1]){
test[i,3]=sum(test[i,3:dim(test)[2]])
}
test=as.data.frame(test[,1:3])
names(train)=c("index1","index2","x")
names(test)=c("index1","index2","x")
datamean=c(mean(train[1:189,3]),mean(train[190:(188+197+2),3]))
head(train)
datamean
test=test[1:(86+96+2)]
test=test[1:(86+96+2),]
test
test[,4]=0
test[,4]=0
for (i in 1:dim(test)[1]){
if (abs(test[i,3]-datamean[2]) < abs(test[i,3]-datamean[1]) ){
test[i,4]=1
}
}
test
sum(test[,1]==test[,4])
sum(test[,1]==test[,4])/dim(test)[1]
data(iris)
iris.adaboost <- boosting(Species~., data=iris, boos=TRUE,
mfinal=10)
install.packages("adabag")
library(adabag)
data(iris)
iris.adaboost <- boosting(Species~., data=iris, boos=TRUE,
mfinal=10)
importanceplot(iris.adaboost)
sub <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
iris.bagging <- bagging(Species ~ ., data=iris[sub,], mfinal=10)
iris.predbagging<- predict.bagging(iris.bagging, newdata=iris[-sub,])
iris.bagging
iris.predbagging
iris.bagging
install.packages("e1071")
library(adabag)
data(iris)
iris.adaboost <- boosting(Species~., data=iris, boos=TRUE,
mfinal=10)
importanceplot(iris.adaboost)
sub <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
iris.bagging <- bagging(Species ~ ., data=iris[sub,], mfinal=10)
iris.predbagging<- predict.bagging(iris.bagging, newdata=iris[-sub,])
iris.predbagging
library(TSA)
larain
x=matrix(0,ncol=5,nrow=6)
x
x[2,3]=NA
x[4,4]=NA
x[6,3]=NA
v=data.frame(x)
v
v$x1
v$X1
v[!is.na(v$X3),]
v
v[!is.na(v$X3),]
iris
iris1=iris
train=sample(iris1,100)
iris1=iris
train=sample(iris1,100)
iris1=iris
train=sample(iris1,100)
iris1
train=sample(1:150,100)
?predict
num=sample(1:150,100)
train=iris[num,]
test=iris[-num,]
library(e1071)
model=svm(Species~.,data=train)
pre=predict(model,test)
pre
table(pre,test)
table(pre,test$Species)
x=read.table(file="o:\\統計計算下\\heart.dat",head=T)
attach(x)
x$tpr1=map1/(hr1*sv1)
x$tpr2=map2/(hr2*sv2)
plot(~id+time+sv1+hr1+fbf1+map1)
plot(~id+time+sv1+hr1+fbf1+map1,data=x[id=="ht1",])
plot(~id+time+sv1+hr1+fbf1+map1)
plot(~id+time+sv1+hr1+fbf1+map1,main="fff")
plot(~id+time+sv1+hr1+fbf1+map1,main="time和所有變數的散佈圖")
plot(~id+time+sv1+hr1+fbf1+map1,data=x[id=="ht1",],main="ht1受測者的time和其餘變數散佈圖")
plot(~id+time+sv1+hr1+fbf1+map1,data=x[grep("ht",id),])
abline(h = 100)
line(h = 100)
?abline
abline(v = 100)
x1=c(-1.9,-6.9,5.2,5.0,7.3,6.8,0.9,-12.5,1.5,3.8,0.2,-0.1,0.4,2.7,2.1,-4.6,-1.7,-2.6,2.6,2.8)
##濕度差
x2=c(0.2,0.4,2.0,2.5,0,12.7,-5.4,-2.5,1.3,6.8,6.2,7.5,14.6,8.3,0.8,4.3,10.9,13.1,12.8,10)
##溫度差
data=data.frame(x1=x1,x2=x2,group=rep(c(1,2),c(10,10)))
plot(x1,x2)
text(x1,x2,data$group,adj=-0.5)
plot(x1-mean(x1),x2-mean(x2),pch=21,bg=data$group+1)
legend("topleft",legen=c("雨天","晴天"),fill=c(2,3))
ld=lda(data$group~x1+x2)
?lda
??lda
library(MASS)
ld=lda(data$group~x1+x2)
names(ld)
ld
z=predict(ld)
z
abline(0,0.098/0.2296)
predict(ld,data.frame(x1=8.1,x2=2.0))
table(z,data$group)
z=predict(ld)
table(z,data$group)
z
table(z$class,data$group)
predict(ld,data.frame(x1=8.1,x2=2.0))
predict(ld,c(x1=8.1,x2=2.0))
c(x1=8.1,x2=2.0)
?predict
p=c(8.1,2.0)
predict(ld,data.frame(p))
p=c(x1=8.1,x2=2.0)
predict(ld,data.frame(p))
data.frame(p)
predict(ld,data.frame(x1=c(8.1,3.9),x2=c(2.0,2.8)))
??garch
library(tseries)
library(fGarch)
library(TSA)
library(PerformanceAnalytics)
?garchSpec
aaa=garchSpec(model=list(ar=0.5,beta=0.75))
aaa
aaa=garchSpec(model=list(ar=0.5,alpha=0,beta=0.75))
aaa
aaa=garchSpec(model=list(ar=0.5,alpha=0))
aaa
aaa=garchSpec(model=list(ar=0.5,alpha=0.5))
aaa
aaa=garchSpec(model=list(ar=0.5,alpha=0.5,beta=0))
aaa
x=read.table(file="C:\\Users\\tsr\\Desktop\\新增資料夾\\w15.txt")
x
names(x)=c("year","month","y","x")
lmmodel=lm(x$y~x$x)
summary(lmmodel)
e=lmmodel[[2]]
e
plot.ts(e)
acf(e)
pacf(e)
model1=arima(x = e,order = c(1,0,0))
names(model1)
#e1=e[-46]
#e1=c(0,e1)
#nt=e-0.5278*e1
nt=model1[[8]]
nt=nt^2
model1
nt=model1[[8]]
nt=nt^2
plot.ts(nt)
acf(nt)
pacf(nt)
model2=arima(x=nt,order=c(1,0,0))
model2
aaa=garchSpec(model=list(ar=0.5278,alpha=0.3654,beta=0))
aaa
aaa=garchSpec(model=list(ar=0.5278,alpha=0.3654,beta=0),cond.dist = "norm")
aaa
?fGARCHSPEC
fitted(aaa)
fitted(aaa,data = e)
garchFit(~arma(1,0)+garch(0,1),data=e,trace=F)
?garchFit
garchFit(~arma(1,0)+garch(0,1),data=e,trace=F)
garchFit(~arma(1,0)+garch(1,0),data=e,trace=F)
garchFit(~arma(1,0)+garch(1,0),data=e)
bbb=garchFit(~arma(1,0)+garch(1,0),data=e)
bbb
bbb=garchFit(~arma(1,0),data=e)
bbb=garchFit(~arma(1,0)+garch(1,0),data=e)
aaa=garchSpec(model=list(ar=0.5278,alpha=0.3654,beta=0),cond.dist = "norm")
type(aaa)
class(aaa)
fitted(aaa,data = e)
garchSim(aaa, n = 10)
garchSim(aaa, n = 46)
garchSim(aaa, n = 10)
garchSim(aaa, n = 46)
bbb=garchSim(aaa, n = 46)
e
x
e
aaa=garchSpec(model=list(ar=0.5278,alpha=0.3654,beta=0),cond.dist = "norm")
bbb=garchSim(aaa, n = 46)
bbb
model1
model2=arima(x=nt,order=c(1,0,0))
model2
bbb=garchSim(aaa, n = 46,n.start = 0.03)
bbb
bbb=garchSim(aaa, n = 46)
bbb
datainput=function(max,goal){
)
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
#############製作所有目錄，並記錄檔案編號到index1 ,index2
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
##############xx 為第一行是編號0~9 第二行為第二個編號  第三行到第1026行是將該個資料的data 以數值存入
#########讀入資料
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\tsr\\Desktop\\程式\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\tsr\\Desktop\\程式\\testDigits\\")
######建立一個函數，將32*32筆資料，分成8組，分別另為x1~x8，並記錄每組內1的個數
trans=function(max,data,newname,sp){
newname=matrix(0,ncol=sp+1,nrow=max)
newname[,1]=data[,1]
for (j in 1:max){
for (i in 1:sp){
newname[j,i+1]=sum(data[j,(32*32/sp*(i-1)+2):(32*32/sp*i+1)])
}
}
newname=as.data.frame(newname)
names(newname)=c("index1",paste("x",1:sp,sep=""))
return(newname)
}
#######將資料進行轉換
newtrain=trans(dim(train)[1],train,newtrain,8)
newtest=trans(dim(test)[1],test,newtest,8)
##############以1024個點下去找決策樹
#newtrain=train[,-2]
#newtest=test[,-2]
#newtrain=as.data.frame(newtrain)
#names(newtrain)=c("index1",paste("x",1:1024,sep=""))
#newtest=as.data.frame(newtest)
#names(newtest)=c("index1",paste("x",1:1024,sep=""))
#################
###將0~9換成字符類型，否則後面會有問題
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
library(rpart)
#####建立預測模型
model=rpart(index1~.,data=newtrain)
par(mai=rep(0.1,4))
plot(model)
text(model)
plot(model)
text(model)
library(maptree)
draw.tree(model)
predict=predict(model,newtest[,2:dim(newtest)[2]])
pre=apply(predict,MARGIN = 1,FUN = which.max)
pre=pre-1
sum(pre==test[,1])/length(test[,1])
predict=predict(model,newtest[,2:dim(newtest)[2]])
predict
predict
summary(predict)
model
plot(model)
text(model)
irirs
data(irirs)
data(iris)
summary(iris)
data=iris
summary(iris)
data=iris[,3:5]
model=kmeans(data,3)
model=kmeans(data=data1,3)
data1=iris[,3:4]
model=kmeans(data=data1,3)
model=kmeans(data=data1,centers = 3)
data1=iris[,3:4]
model=kmeans(x=data1,centers = 3)
table(iris[,5],model$sluster)
model=kmeans(x=data1,centers = 3)
table(iris[,5],model$sluster)
table(iris[,5],model$cluster)
names(model)
model[1]
names(model)
plot(iris[,5],col=model$cluster)
plot(iris[,3:4],col=model$cluster)
plot(iris[,3:4],bg=21,col=model$cluster)
plot(iris[,3:4],bg=21,col=model$cluster)
plot(iris[,3:4],pch=21,bg=model$cluster)
data2=iris[,1:2]
data1=iris[,3:4]
model=kmeans(x=data2,centers = 3)
names(model)
model[1]
table(iris[,5],model$cluster)
plot(data2,pch=21,bg=model$cluster)
model=kmeans(x=data1,centers = 3)
names(model)
model[1]
table(iris[,5],model$cluster)
plot(data1,pch=21,bg=model$cluster)
bbb=garchFit(~arma(1,0)+garch(1,0),data=e,cond.dist = "norm")
library(rugarch)
bbb=garchFit(~arma(1,0)+garch(1,0),data=e,cond.dist = "norm")
library(tseries)
library(fGarch)
library(TSA)
library(PerformanceAnalytics)
x=read.table(file="C:\\Users\\tsr\\Desktop\\新增資料夾\\w15.txt")
x
names(x)=c("year","month","y","x")
lmmodel=lm(x$y~x$x)
summary(lmmodel)
e=lmmodel[[2]]
e
plot.ts(e)
acf(e)
pacf(e)
model1=arima(x = e,order = c(1,0,0))
names(model1)
#e1=e[-46]
#e1=c(0,e1)
#nt=e-0.5278*e1
nt=model1[[8]]
nt=nt^2
plot.ts(nt)
acf(nt)
pacf(nt)
model2=arima(x=nt,order=c(1,0,0))
model2
g1=garch(nt,)
summary(g1)
bbb=garchFit(~arma(1,0)+garch(1,0),data=e,cond.dist = "norm")
bbb=garchFit(~arma(1,0)+garch(1,0),data=nt,cond.dist = "norm")
v
v=data.frame()
v[1,1]=lmmodel$coef[1]
v[2,1]=lmmodel$coef[2]
v[3,1]=model1$coef[1]
v[4,1]=model2$coef[1]
v[1,2]=summary(lmmodel)$coefficients[1,2]
v[2,2]=summary(lmmodel)$coefficients[2,2]
v[4,2]=model2$var.coef[1,1]^(1/2)
colnames(v)=c("coef","std")
rownames(v)=c("β0","β1","φ1","θ1")
v
x=read.table(file="C:\\Users\\tsr\\Desktop\\新增資料夾\\w15.txt")
x
names(x)=c("year","month","y","x")
lmmodel=lm(x$y~x$x)
summary(lmmodel)
e=lmmodel[[2]]
e
plot.ts(e)
acf(e)
pacf(e)
model1=arima(x = e,order = c(1,0,0))
names(model1)
#e1=e[-46]
#e1=c(0,e1)
#nt=e-0.5278*e1
nt=model1[[8]]
nt=nt^2
plot.ts(nt)
acf(nt)
pacf(nt)
model2=arima(x=nt,order=c(1,0,0))
model2
g1=garch(nt,)
summary(g1)
v=data.frame()
v[1,1]=lmmodel$coef[1]
v[2,1]=lmmodel$coef[2]
v[3,1]=model1$coef[1]
v[4,1]=model2$coef[1]
v[1,2]=summary(lmmodel)$coefficients[1,2]
v[2,2]=summary(lmmodel)$coefficients[2,2]
v[4,2]=model2$var.coef[1,1]^(1/2)
colnames(v)=c("coef","std")
rownames(v)=c("β0","β1","φ1","θ1")
v
v=data.frame()
v[1,1]=lmmodel$coef[1]
v[2,1]=lmmodel$coef[2]
v[3,1]=model1$coef[1]
v[4,1]=model2$coef[1]
v[1,2]=summary(lmmodel)$coefficients[1,2]
v[2,2]=summary(lmmodel)$coefficients[2,2]
v[3,2]=model1$var.coef[1,1]^(1/2)
v[4,2]=model2$var.coef[1,1]^(1/2)
colnames(v)=c("coef","std")
rownames(v)=c("β0","β1","φ1","θ1")
v
