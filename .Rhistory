##原模型
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[[2]][2]=sum((unlist(m1[8]))^2)/length(cc1)
###處理季節效應
cc1=diff(log(cc),lag=4)
plot.ts(cc1)
acf(cc1,lag.max=30)
pacf(cc1,lag.max=30)
eacf(cc1)
library(TSA)
x=read.table(file="C:\\Users\\TSR\\Desktop\\共享資料\\4444.txt")
cc=x$V3
cc
###原型
plot.ts(cc,type="o")
acf(cc)
pacf(cc)
####
###處理季節效應
cc1=diff(log(cc),lag=4)
plot.ts(cc1)
acf(cc1,lag.max=30)
pacf(cc1,lag.max=30)
eacf(cc1)
####
m1=arima(cc,order=c(2,0,0),seasonal=list(order=c(0,1,0),period=4))
m1
plot.ts(cc,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=4,type='b')
mse[[1]][2]=sum((unlist(m1[8]))^2)/length(cc)
cc2=diff(cc2,lag=4)
cc2=diff(cc2)
plot.ts(cc2)
acf(cc2)
pacf(cc2)
cc1=cc[1:95]
cc2=cc[96:196]
m1=arima(cc2,order=c(0,1,1),seasonal=list(order=c(1,1,1),period=4))
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[3][1]=sum((unlist(m1[8]))^2)/length(cc2)
##ma3
m1=arima(cc2,order=c(0,0,3),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[[3]][2]=sum((unlist(m1[8]))^2)/length(cc2)
##原模型
m1=arima(cc2,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[[3]][3]=sum((unlist(m1[8]))^2)/length(cc2)
mse
cc1=diff(cc1,lag=4)
plot.ts(cc1)
acf(cc1)
pacf(cc1)
p1=c(80,80)
p2=c(18,20)
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
plot.ts(cc1,type="o")
acf(cc1)
pacf(cc1)
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
##原模型
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[[2]][2]=sum((unlist(m1[8]))^2)/length(cc1)
p1=c(90,90)
p2=c(26,27)
cc2=cc[96:196]
plot.ts(cc2,type="o")
acf(cc2)
pacf(cc2)
mse=list()
###ar5
m1=arima(cc,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4))
m1
fitted(m1)
plot(cc,col="red",type="l")
lines(fitted(m1),col="blue")
p1=c(170,170)
p2=c(18,20)
t=c("red:原有數列","blue:fit數列")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[1][1]=sum((unlist(m1[8]))^2)/length(cc)
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
##季節性
m1=arima(cc1,order=c(1,0,0),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[2][1]=sum((unlist(m1[8]))^2)/length(cc1)
cc=x$V3
cc1=cc[1:95]
cc2=cc[96:196]
##原模型
m1=arima(cc1,order=c(5,0,0),seasonal=list(order=c(0,1,0),period=4)　)
m1
plot.ts(cc1,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[[2]][2]=sum((unlist(m1[8]))^2)/length(cc1)
```
##後段##
```{r}
p1=c(90,90)
p2=c(26,27)
cc2=cc[96:196]
plot.ts(cc2,type="o")
####看起來每4期有相關，先處理季節效應
cc2=diff(cc2,lag=4)
cc2=diff(cc2)
pacf(cc2)
cc1=cc[1:95]
cc2=cc[96:196]
m1=arima(cc2,order=c(0,1,1),seasonal=list(order=c(1,1,1),period=4))
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
pacf(rstandard(m1))
plot(m1,n.ahead=20,type='b')
mse[3][1]=sum((unlist(m1[8]))^2)/length(cc2)
m1=arima(cc2,order=c(0,0,3),seasonal=list(order=c(1,1,0),period=4))
m1
plot.ts(cc2,col="red")
plot(rstandard(m1))
qqnorm(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
mse[[3]][2]=sum((unlist(m1[8]))^2)/length(cc2)
##原模型
m1=arima(cc2,order=c(5,0,0),seasonal=list(order=c(1,1,0),period=4))
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
acf(rstandard(m1))
pacf(rstandard(m1))
mse
abline(h=c(2,-2))
plot(m1,n.ahead=20,type='b')
abline(h=c(2,-2))
acf(rstandard(m1))
qqnorm(rstandard(m1))
plot.ts(cc2)
m1
```
mse[[3]][3]=sum((unlist(m1[8]))^2)/length(cc2)
qqline(rstandard(m1))
acf(cc2)
acf(cc2)
plot.ts(cc2,col="red")
qqline(rstandard(m1))
qqline(rstandard(m1))
plot(m1,n.ahead=20,type='b')
text(p1,p2,labels=t,col = c("red","blue"))
```
qqnorm(rstandard(m1))
lines(fitted(m1),col="blue")
```{r}
##ma3
pacf(cc2)
plot.ts(cc2,col="red")
cc2=diff(cc2,lag=4)
cc1=cc[1:95]
cc2=cc[96:196]
cc2=diff(cc2,lag=4)
cc2=diff(cc2)
plot.ts(cc2)
plot.ts(cc2,type="o")
cc2=cc[96:196]
plot.ts(cc2,type="o")
acf(cc2)
pacf(cc2)
```
####看起來每4期有相關，先處理季節效應
```{r}
cc2=diff(cc2,lag=4)
plot.ts(cc2)
cc2=cc[96:196]
plot.ts(cc2,type="o")
acf(cc2)
pacf(cc2)
```
####看起來每4期有相關，先處理季節效應
```{r}
cc2=diff(cc2,lag=4)
plot.ts(cc2)
acf(cc2)
acf(cc2)
pacf(cc2)
cc2=cc[96:196]
plot.ts(cc2,type="o")
acf(cc2)
pacf(cc2)
cc2=diff(cc2,lag=4)
plot.ts(cc2)
acf(cc2)
pacf(cc2)
cc2=diff(cc2,lag=4)
acf(cc2)
pacf(cc2)
cc2=cc[96:196]
plot.ts(cc2,type="o")
acf(cc2)
pacf(cc2)
acf(cc2)
pacf(cc2)
cc2=cc[96:196]
cc2=diff(cc2,lag=4)
plot.ts(cc2)
acf(cc2)
pacf(cc2)
cc2=diff(cc2)
plot.ts(cc2)
acf(cc2)
pacf(cc2)
cc2=cc[96:196]
m1=arima(cc2,order=c(1,1,1),seasonal=list(order=c(1,1,1),period=4))
plot.ts(cc2,col="red")
lines(fitted(m1),col="blue")
text(p1,p2,labels=t,col = c("red","blue"))
plot(rstandard(m1))
abline(h=c(2,-2))
qqnorm(rstandard(m1))
qqline(rstandard(m1))
acf(rstandard(m1))
pacf(rstandard(m1))
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
#############製作所有目錄，並記錄檔案編號到index1 ,index2
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
##############xx 為第一行是編號0~9 第二行為第二個編號  第三行到第1026行是將該個資料的data 以數值存入
#########讀入資料
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
trans=function(max,data,newname,sp){
newname=matrix(0,ncol=sp+1,nrow=max)
newname[,1]=data[,1]
for (j in 1:max){
for (i in 1:sp){
newname[j,i+1]=sum(data[j,(32*4*(i-1)+2):(32*4*i+1)])
}
}
newname=as.data.frame(newname)
names(newname)=c("index1",paste("x",1:sp,sep=""))
return(newname)
}
newtrain=trans(1934,train,newtrain,8)
newtest=trans(946,test,newtest,8)
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
library(rpart)
model=rpart(index1~.,data=newtrain)
par(mai=rep(0.1,4))
plot(model)
text(model)
predict=predict(model,newtest[,2:dim(newtest)[1])
dim(newtest)
predict=predict(model,newtest[,2:dim(newtest)[2])
dim(newtest)[2]
predict=predict(model,newtest[,2:dim(newtest)[2])
pre=apply(predict,MARGIN = 1,FUN = which.max)
predict=predict(model,newtest[,2:dim(newtest)[2]])
pre=apply(predict,MARGIN = 1,FUN = which.max)
pre=pre-1
######正確率
sum(pre==test[,1])/length(test[,1])
datainput=function(max,goal){
data=c()
index1=c()
index2=c()
for (i in 0:9){
aa=paste(goal,i,"_",0:num[i+1],".txt",sep="")
bb=rep(i,num[i+1]+1)
cc=0:num[i+1]
index1=c(index1,bb)
index2=c(index2,cc)
data=c(data,aa)
}
#############製作所有目錄，並記錄檔案編號到index1 ,index2
xx=matrix(0,ncol=32*32+2,nrow=length(data))
for (i in 1:length(data)){
x=readLines(data[i])
x1=strsplit(x,split="")
x1=unlist(x1)
x1=as.numeric(x1)
xx[i,3:1026]=x1
}
xx[,1]=index1
xx[,2]=index2
return(xx)
}
##############xx 為第一行是編號0~9 第二行為第二個編號  第三行到第1026行是將該個資料的data 以數值存入
#########讀入資料
num=c(188,197,194,198,185,186,194,200,179,203)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
newtrain=train
newtest=test
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
library(rpart)
head(newtest)
newtrain=train[,-2]
newtest=test[,-2]
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
model=rpart(index1~.,data=newtrain)
newtrain=train[,-2]
newtest=test[,-2]
newtrain=as.data.frame(newtrain)
names(newtrain)=c("index1",paste("x",1:1024,sep=""))
newtrain[,1]=as.character(newtrain[,1])
model=rpart(index1~.,data=newtrain)
par(mai=rep(0.1,4))
plot(model)
text(model)
newtest=as.data.frame(newtest)
names(newtest)=c("index1",paste("x",1:1024,sep=""))
newtest[,1]=as.character(newtest[,1])
predict=predict(model,newtest[,2:dim(newtest)[2]])
pre=apply(predict,MARGIN = 1,FUN = which.max)
pre=pre-1
sum(pre==test[,1])/length(test[,1])
draw.tree(model)
install.packages("maptree")
library(maptree)
draw.tree(model)
num=rep(10,10)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
trans=function(max,data,newname,sp){
newname=matrix(0,ncol=sp+1,nrow=max)
newname[,1]=data[,1]
for (j in 1:max){
for (i in 1:sp){
newname[j,i+1]=sum(data[j,(32*32/sp*(i-1)+2):(32*32/sp*i+1)])
}
}
newname=as.data.frame(newname)
names(newname)=c("index1",paste("x",1:sp,sep=""))
return(newname)
}
newtrain=trans(1934,train,newtrain,32)
dim(test)
newtrain=trans(dim(train)[1],train,newtrain,32)
newtest=trans(dim(test)[1],test,newtest,32)
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
model=rpart(index1~.,data=newtrain)
par(mai=rep(0.1,4))
plot(model)
text(model)
predict=predict(model,newtest[,2:dim(newtest)[2]])
pre=apply(predict,MARGIN = 1,FUN = which.max)
pre=pre-1
######正確率
sum(pre==test[,1])/length(test[,1])
num=rep(10,10)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
newtrain=train[,-2]
newtest=test[,-2]
newtrain=as.data.frame(newtrain)
names(newtrain)=c("index1",paste("x",1:1024,sep=""))
newtest=as.data.frame(newtest)
names(newtest)=c("index1",paste("x",1:1024,sep=""))
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
model=rpart(index1~.,data=newtrain)
predict=predict(model,newtest[,2:dim(newtest)[2]])
pre=apply(predict,MARGIN = 1,FUN = which.max)
pre=pre-1
######正確率
sum(pre==test[,1])/length(test[,1])
num=rep(10,10)
train=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\trainingDigits\\")
num=c(86,96,91,84,113,107,86,95,90,88)
test=datainput(max=num,goal="C:\\Users\\TSR\\Desktop\\文字辨識\\testDigits\\")
trans=function(max,data,newname,sp){
newname=matrix(0,ncol=sp+1,nrow=max)
newname[,1]=data[,1]
for (j in 1:max){
for (i in 1:sp){
newname[j,i+1]=sum(data[j,(32*32/sp*(i-1)+2):(32*32/sp*i+1)])
}
}
newname=as.data.frame(newname)
names(newname)=c("index1",paste("x",1:sp,sep=""))
return(newname)
}
newtrain=trans(dim(train)[1],train,newtrain,8)
newtest=trans(dim(test)[1],test,newtest,8)
newtrain[,1]=as.character(newtrain[,1])
newtest[,1]=as.character(newtest[,1])
model=rpart(index1~.,data=newtrain)
predict=predict(model,newtest[,2:dim(newtest)[2]])
pre=apply(predict,MARGIN = 1,FUN = which.max)
pre=pre-1
######正確率
sum(pre==test[,1])/length(test[,1])
library(maptree)
